version: '3.8'
services:

  payment_api:
    container_name: payment_api
    build: ./payment_api
    volumes:
      - ./payment_api:/app
    networks:
      - movies-api-network

  subscription_api:
    container_name: subscription_api
    build: subscription_api
    volumes:
      - ./subscription_api:/app
    networks:
      - movies-api-network

  admin:
    build: ./subscription_admin
    ports:
      - "8002:8002"
    networks:
      - movies-api-network
    restart: on-failure

  redis:
    image: redis:6.0.9
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/opt/app/redis/data
    networks:
      - movies-api-network
    restart: on-failure

  postgres:
    build: ./db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    networks:
      - movies-api-network
    restart: on-failure

  rabbit:
    image: rabbitmq:latest
    ports:
      - "5672:5672"
    logging:
      driver: none
    networks:
      - movies-api-network
    restart: on-failure

  order_scheduler:
    build:
      context: ./order_service
      dockerfile: DockerFile-scheduler
    depends_on:
      - rabbit
    networks:
      - movies-api-network

  order_worker:
    build:
      context: ./order_service
      dockerfile: Dockerfile-worker
    depends_on:
      - rabbit
    networks:
      - movies-api-network

  payment_scheduler:
    build:
      context: ./payment_service
      dockerfile: DockerFile-scheduler
    depends_on:
      - rabbit
    networks:
      - movies-api-network

  payment_worker:
    build:
      context: ./payment_service
      dockerfile: Dockerfile-worker
    depends_on:
      - rabbit
    environment:
      - CELERY_BROKER_URL=$CELERY_BROKER_URL
    networks:
      - movies-api-network

networks:
  movies-api-network:
    name: movies-api-network
    driver: bridge

volumes:
  postgresdata:
    name: postgresdata
  redis-data:
    name: redis-data